repl:
    ld DE, dataStack
    jp interpret

interpret:
    _push wordBuf1                  ; str
    _push $40                       ; str maxlen
    _push $20                       ; str maxlen delim
    call parseWord                  ; str len
    call dup  
    call isZero                     ; str len len
    jr z,interpret2                 ; str len
    call state                      ; str len nesting
    call at
    call isZero
    jr z,interpret1                 ; str len
    call compileWord      
    jr interpret
interpret1:
    call interpWord                 ; num?
    jr interpret
interpret2:
    jp twodrop                      ; cleanup and return

interpWord:                                 ; str len -- num?
    call twodup                     ; str len str len
    call find                       ; str len ptrOrNull
    call dup                        ; str len ptrOrNull ptrOrNull
    call isZero                     ; str len ptrOrNull
    jr z,interpNum
    call twonip                     ; ptr
    call getBody                    ; ptr'
    call execute                    ; ?
    ret

interpNum:
    call drop                       ; str len
    call toNumber                   ; num err
    call isZero
    ret z
    call drop                       ; --
    _pushPStr "NOT FOUND!\r\n"
    call printPStr                  ; --
    ret

compileWord:
    call twodup                     ; str len str len
    call find                       ; str len ptrOrNull
    call dup                        ; str len ptrOrNull ptrOrNull
    call isZero                     ; str len ptrOrNull
    jr z,compileNum
    call twonip                     ; ptr
    call getBody                    ; ptr'
    call execute                    ; ?
    ret

compileNum:
    call drop                       ; str len
    call toNumber                   ; num err
    call isZero
    ret z
    call drop                       ; --
    _pushPStr "NOT FOUND!\r\n"
    call printPStr                  ; --
    ret

