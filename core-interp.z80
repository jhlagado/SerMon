repl:
    ld IX, dataStack                  ; reset data stack
    call interpret
    ret

interpret:
    _do
        _push wordBuf1             ; str
        _push $40                  ; str maxlen
        _push $20                  ; str maxlen delim
    	call parseWord                  ; str len
        call dup  
        call isZero                          ; str len len
        jr nz,else_interpret2                        ; str len
            call drop2                      ; --
            _break
            jr endif_interpret2
else_interpret2:
            _push (nestLevel)           ; str len nesting
            call isZero
            jr nz,else_interpret1          ; str len
                call interpImmed        ; num?
                jr endif_interpret1
else_interpret1: 
                call interpCompile      ;
endIf_interpret1:
endIf_interpret2:
    _endDo
    ret

interpImmed:                            ; str len -- num?
    call dup2                               ; str len str len
    call find                           ; str len ptrOrNull
    call dup                                ; str len ptrOrNull ptrOrNull
    __ifZero interpImmed0                            ; str len ptrOrNull
        call drop                           ; str len
        call toNumber                   ; num err
        __ifNotZero interpImmed1
            call drop                       ; --
            _pushPStr "NOT FOUND!\r\n"
            call printPStr              ; --
        __endIf interpImmed1                         ; else leave num on stack
    __else interpImmed0
        call nip2                       ; ptr
        call getBody                    ; ptr'
        call execute                    ; ?
    __endif interpImmed0
    ret

interpCompile:
    ret

execute:
    _tor
    ret
