repl:
            ld IX, dataStack                  ; reset data stack
            ld DE, dataStack
            call interpret
            ret

interpret:
interpret1:
            _push wordBuf1                  ; str
            _push $40                       ; str maxlen
            _push $20                       ; str maxlen delim
            call parseWord                  ; str len
            call dup  
            call isZero                     ; str len len
            jr nz,interpret2                ; str len
            call drop2                      ; --
            jr interpret6
interpret2:
            _push (nestLevel)               ; str len nesting
            call isZero
            jr nz,interpret3                ; str len
            call interpImmed                ; num?
            jr interpret4
interpret3: 
            call interpCompile      
interpret4:
interpret5:
            jr interpret1
interpret6:
            ret

interpImmed:                                ; str len -- num?
            call dup2                       ; str len str len
            call find                       ; str len ptrOrNull
            call dup                        ; str len ptrOrNull ptrOrNull
            call isZero                     ; str len ptrOrNull
            jr nz,interpImm2
            call drop                       ; str len
            call toNumber                   ; num err
            call isZero
            jr z,interpImm1
            call drop                       ; --
            _pushPStr "NOT FOUND!\r\n"
            call printPStr                  ; --
interpImm1:                                 ; else leave num on stack
            jr interpImm3
interpImm2:
            call nip2                       ; ptr
            call getBody                    ; ptr'
            call execute                    ; ?
interpImm3:
            ret

interpCompile:
            ret

execute:
            _tor
            ret
