; destroys: A, DE, HL
formatNum:                              ; ptr num -- ptr len
    _overInto H,L                       ; HL = ptr, BC = num
    _tuckFrom H,L                       ; ptr ptr num
    bit 7, B                            ; Detect sign of HL.
    _if nz
        call negate                     ; ptr ptr num1
        call swap                           ; ptr num1 ptr
        ld A, '-'                       ; Output '-' to string and negate HL.
        ld (BC),A
        inc BC
        call swap                           ; ptr ptr' num1
    _endif
    _push (numberBase)               ; ptr ptr' num1 base
    call swap                               ; ptr ptr' base num1
    ld D, 0                             ; D counter
    _do
        inc D
        call over                           ; ptr ptr' base num1 base
        push DE
        call divide                     ; ptr ptr' base num2 rem
        pop DE
        _toRetStack                     ; ptr ptr' base num2
        call dup                            ; ptr ptr' base num2 num2
    _untilZero
    _enddo
    call drop2                              ; ptr ptr'
    _do
        _fromRetStack                   ; ptr ptr' digit
        ld A,$30
        add A,C                         ; convert TOS digit to ASCII
        cp $3A
        _if nc
            add A,7
        _endif
        call drop                           ; ptr ptr'
        ld (BC),A
        inc BC
        dec D
    _until z
    _enddo
    _peek H,L                           ; HL = ptr'
    call dropdup                            ; ptr ptr
    or A
    sbc HL, BC
    _poke  H,L                          ; ptr len
    ret

