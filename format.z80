formatNum:                              ; ptr num -- ptr len
    push IY
    _pop H,L                            ; HL = num, BC = TOS = ptr

    ld IY,0
    add IY,BC                           ; copy BC to IY
    _dup                                ; save BC for later

    bit 7, H                            ; Detect sign of HL.
    _if nz
        ld A, '-'                       ; Output '-' to string and negate HL.
        ld (IY+0), A
        inc IY
        loadWord B,C, H,L
        call negateNum
        loadWord H,L, B,C
    _endif

    ld BC,(VAR_BASE)                    ; C = BASE
    ld B, 0                             ; B will count character length of number

    _do
        _dup
        _push0 H,L
        ld B,0                          ; mutate TOS to equal C
        call divideWord
        ld A,C
        push AF                         ; pushes remainder on return stack
        _drop
        _pop H,L
        inc B
        checkZeroWord H,L
    _until z
    _enddo

    ld C,B                              ; copy B count in C
    _do
        pop AF                          ; pops digits off stack
        add A,$30                       ; convert digit to ASCII
        cp $3A
        _if nc
            add A,7
        _endif
        ld (IY+0), A
        inc IY
    _djnz
                                        ; B = 0, BC = count
    _peekNext H,L
    ld A,(HL)
    cp "-"
    _if z
        inc BC                          ; if sign negative increase count
    _endif

    ; ptr count
    pop IY
    ret

