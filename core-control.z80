CODE "?branch", 0, qbran                         
    call isZero
    jr z, bran
    pop HL
    inc HL
    inc HL
    jp (HL)

CODE "branch", 0, bran                         
    call dup
    pop HL
    ld C,(HL)
    inc HL
    ld B,(HL)
    ld HL,BC
    jp (HL)

CODE "execute", 0, execute
    ld HL,BC
    call drop
    jp (HL)

; next ( -- ) ( r: idx ret ) followed by address of loop start
; Run time code for the single index loop.
; r> r> dup if 1 - >r @ >r exit then drop cell+ >r ;
CODE 'donxt',0,DONXT         
            call rfrom          ; ret ( r: idx )   
            call rfrom          ; ret idx 
            call dup        ; ret idx idx
            call isZero     
            jr nz,DONXT1    
            dec BC          ; ret idx'
            call tor            ; ret (r: idx')
            call at      ; ret' (r: idx')
            jp tor            ; (r: idx' ret')
DONXT1:
            call drop       ; ret
            inc BC          
            inc BC          ; ret+2
            jp tor            ; (r: ret+2)

; FOR         ( -- a )
; Start a FOR-NEXT loop structure in a colon definition.
CODE 'for',IMMED,FOR    
    call COMPI
    dw TOR
    ld HL,(VAR_HERE)
    _push HL
    ret

; NEXT        ( a -- )
; Terminate a FOR-NEXT loop structure.
CODE 'next',IMMED,NEXT    
    call COMPI
    dw DONXT
    call COMMA
    ret    