.engine mycomputer

.include "struct-macros.z80"
.include "dloop-macros.z80"

TESTMODE        equ 0
SERIALMODE      equ 6850

ROM_SIZE        equ     $800
RAM_SIZE        equ     $10000 - ROM_SIZE

START_ROM       equ     $0
START_RAM       equ     START_ROM + ROM_SIZE
END_RAM         equ     START_RAM + RAM_SIZE
RET_STACK       equ     END_RAM             ; return stack, grows down

PARAM_STACK_SIZE equ    $80                ; parameter stack
SER_BUFSIZE     equ     $3F

.org START_ROM
RST00:                                      ; Reset
    di                                      ; Disable interrupts
    jp start

.org $0038
RST38:                                      ; rst 38
    jp serialIn

start:
    ld SP, RET_STACK                        ; Initialise the return stack.
    ld IX, PARAM_STACK                      ; initialise the param stack.
    call initSerial

    ld HL, TXT_INTRO
    call printPStr

    _do
        call getc
        call putc
        cp "\r"
        _if z
            ld a, "\n"
            call putc
        _endIf
    _enddo

printPStr:                          ; _ptr --
    ld C, (HL)
    ld B, 0
    inc HL
    _do
        ld A,(HL)
        call putc
        inc HL
        dec BC
        ld A, C
        or B
    _until z
    _enddo
    ret

.include "serial.z80"

TXT_INTRO:      .pstr "Echo 2020\r\n\r\n"

org START_RAM

serInPtr:       dw 0
serRdPtr:       dw 0
serBufUsed:     dw 0
serBuf:         ds SER_BUFSIZE
PARAM_STACK:    ds PARAM_STACK_SIZE

START_USER:
