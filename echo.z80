.include "struct-macros.z80"
.include "dloop-macros.z80"

SER_BUFSIZE     equ $7F
SER_FULLSIZE    equ $30
SER_EMPTYSIZE   equ 5
ROM_SIZE        equ $800
RAM_SIZE        equ $800

START_ROM       equ $0000
START_RAM       equ START_ROM + ROM_SIZE
RET_STACK       equ START_RAM + RAM_SIZE

PORT_STATUS     equ $80
PORT_DATA       equ $81

.org START_ROM
jp start

.org $0038
serialIn:
    push AF
    push HL
    _do
        in A,(PORT_STATUS)
        bit 1,A
    _until z
    _enddo
    
    in A,(PORT_DATA)
    push AF
    
    ld A,(serBufUsed)
    cp SER_BUFSIZE     ; If full then ignore
    _if z
        pop AF
    _else
        ld HL,(serInPtr)
        inc HL
        ld A,L             ; Only need to check low byte because lineBuf < 128 bytes
        cp (serBuf + SER_BUFSIZE) & $7F
        _if z
            ld HL,serBuf
        _endif
        ld (serInPtr),HL
        pop AF
        ld (HL),A
        ld A,(serBufUsed)
        inc A
        ld (serBufUsed),A
    _endif
    pop HL
    pop AF
    ei
    ret

initSerial:
    ld HL,0
    ld (serBufUsed),HL

    ld HL,serbuf
    ld (serInPtr),HL
    ld (serRdPtr),HL

    ret

getc:
    _do
        ld A,(serBufUsed)
        cp $00
    _until nz
    _enddo
    ld HL,(serRdPtr)
    inc HL
    ld A,L             ; Only need to check low byte because lineBuf < 128 bytes
    cp (serBuf + SER_BUFSIZE) & $7F
    _if z
        ld HL,serBuf
    _endif
    di
    ld (serRdPtr),HL
    ld A,(serBufUsed)
    dec A
    ld (serBufUsed),A
    ld A,(HL)
    ei
    ret                         ; Char ready in A

putc:
    out (PORT_DATA),A           ; Output the character
    _do
        in A,(PORT_STATUS)      ; Status byte
        bit 0,A                 ; Set Zero flag if still transmitting character
    _until nz
    _enddo
    ret

inputReady:
    ld A,(serBufUsed)
    cp $0
    ret

start:
    ld SP, RET_STACK
    call initSerial
    im 1
    ei
    _do
        call getc
        call putc
    _enddo


.org START_RAM

serInPtr:       dw 0
serRdPtr:       dw 0
serBufUsed:     dw 0
serBuf: ds SER_BUFSIZE
