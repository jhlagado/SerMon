; result: sets Z if zero
; destroys: A
.macro _compareZero, regHI, regLO          ; check if reg pair is zero
    ld A, regLO
    or regHI
.endm

; destroys: A, DE, HL
.macro _unpackStr
    ld A,(BC)                           ; a = len
    inc BC                              ; TOS = ptr
    call dup
    ld C,A
    ld B,0
.endm

.macro _min                                 ; x1 x2 -- x
    _getTOS H,L
    _getTOS D,E                               ; make a copy of x2
    call drop
    or A
    sbc HL,BC
    jr nc, L_%%M
    _setTOS  D,E
L_%%M:
.endm

.macro _max                                 ; x1 x2 -- x
    _getTOS H,L
    _getTOS D,E                               ; make a copy of x2
    call drop
    or A
    sbc HL,BC
    jr c, L_%%M
    _setTOS  D,E
L_%%M:
.endm

; divide by 2
.macro _div2                                 ; n -- n
    srl B
    rr C
.endm

.macro _isNegative
    bit 7,A
.endm

