.macro _tor
    push BC
    call drop
.endm

.macro _rfrom
    call dup
    pop BC                          
.endm

.macro _getTOS, regHI, regLO                  ; x -- x ; rp = x
    ld regLO, C
    ld regHI, B                             ; move TOS reg pair into register pair
.endm

.macro _setTOS, regHI, regLO                  ; rp = x ; y -- x
    ld C, regLO
    ld B, regHI                             ; move TOS reg pair into register pair
.endm

.macro _push, src                           ; put src (value or memory) location on top of param stack
    call dup
    ld BC, src
.endm

.macro _pop, dest                           ; put top of param stack into dest
    ld dest, BC
    call drop
.endm

.macro _pushChar, char
    call dup
    _setTOS 0,char
.endm

.macro _pushStr, str, len
    _push tpt_text%%M
    _push len
    jr skip%%M
tpt_text%%M:
        db str
skip%%M:
.endm

.macro _pushPStr, s1
    _push tpt_text%%M
    ld BC, tpt_text%%M
    jr skip%%M
tpt_text%%M:
        .pstr s1
skip%%M:
.endm

; _alter order of two cells
.macro _alter2, ofs, reg                ; x1 x2 -- x2 x1
    ld A,(IX+ofs)
    ld (IX+ofs),reg
    ld reg,A
.endm

; destroys: DE
.macro _alter2x, ofs1, ofs2             ; x1 x2 -- x2 x1
    ld D,(IX+ofs1)
    ld E,(IX+ofs2)
    ld (IX+ofs1),E
    ld (IX+ofs2),D
.endm

; _alters order of three cells
; destroys DE
.macro _alter3, ofs1, reg, ofs2           ; x1 x2 x3 -- x2 x3 x1
    ld A,(IX+ofs1)
    ld D,reg
    ld (IX+ofs1),D

    ld E,(IX+ofs2)
    ld reg,E
    ld (IX+ofs2),A
.endm

; destroys: DE
.macro _alter3x, ofs1, ofs2, ofs3        ; x1 x2 x3 -- x2 x3 x1
    ld A,(IX+ofs1)
    ld D,(IX+ofs2)
    ld E,(IX+ofs3)

    ld (IX+ofs1),D
    ld (IX+ofs2),E
    ld (IX+ofs3),A
.endm

