;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; dictionary routines
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

defword "find",0,FIND                   ; ptr len -- ptrOrZero
    _dup                                ; ptr len len
    ld BC, (latestDef)                 ; ptr len headptr
    _do
        _dup
        _untilZero                         ; NULL pointer?  (end of the linked list)
        _dup                        ; ptr len headptr headptr
        inc BC                          ; skip over backLink field
        inc BC
        ld A,(BC)                       ; A = flags
        inc BC                          ; point to packed string length field
        and FLAG_HIDDEN                 ; A = hidden flag value
        ld H,A                          ; save A
        ld A,(BC)                       ; A = length
        inc BC                          ; ptr len headptr nameptr
        add A,H                         ; A = length + hidden flag
        _over2                          ; ptr len headptr nameptr ptr len
        cp C                            ; TOS = len. is length the same as A?
        _if z
            call compareStr             ; ptr len headptr result
            _untilZero                  ; if TOS == 0 then matched
        _else
            _drop3                      ; ptr len headptr
        _endif
                                        ; ptr len headptr nameptr ptr len
        _peek H,L                  ; HL = headptr
        ld C, (HL)
        inc HL
        ld B, (HL)
        inc HL
    _enddo
                            ; ptr len headptr
    _nip               ; ptr headptr
    _nip               ; TOS = headptr
    ret

getBody:                                ; ptr -- ptr'
    inc BC                              ;
    inc BC                              ; skip over backlink
    inc BC                              ; skip over flags
    ld A,(BC)                           ; A = len of routine's name
    inc BC                              ; skip over len
    add A,C
    ld C,A
    ld A,0
    adc A,B
    ld B,A
    ret

