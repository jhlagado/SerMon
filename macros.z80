;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; macros
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Store the chain of links.
link: .set 0

; Macros to deal with the param stack.
.macro ppush0, regHI, regLO
    ld (IX+0), regLO     ; POP register pair from ret stk
    inc IX
    ld (IX+0), regHI
    inc IX
.endm

.macro ppop0, regHI, regLO
    dec IX              ; PUSH register pair on ret stack
    ld regHI, (IX+0)
    dec IX
    ld regLO, (IX+0)
.endm

; Macros to deal with the param stack with TOS in BC
.macro ppush, regHI, regLO
    ppush0 B,C             ; push TOS reg pair
    ld B, regHI         ; move register pair into TOS reg pair
    ld C, regLO
.endm

.macro ppeek, regHI, regLO
    ld regHI, B         ; move TOS reg pair into register pair
    ld regLO, C
.endm

.macro ppop, regHI, regLO
    ppeek regHI,regLO
    ppop0 B,C
.endm

.macro ppushValue, val
    ppush0 B,C
    ld BC, val
.endm

.macro ppushText, s1, len
    ppushValue tpt_text%%M
    ppushValue len
    _skip
tpt_text%%M:
        db s1
    _endskip
.endm

.macro ppushPText, s1
    ppushValue tpt_text%%M
    ld BC, tpt_text%%M
    _skip
tpt_text%%M:
        .pstr s1
    _endskip
.endm

; Macros to deal with the return stack.
.macro PUSH_RET, regHI, regLO
    push regHIregLO
.endm

.macro POP_RET, regHI, regLO
    pop regHIregLO
.endm

.macro SET_RET_SP
    loadWord H,L, B,C
    LD SP, HL
.endm

.macro loadWord, destHI, destLO, srcHI, srcLO    ; transfer from src reg pair to dest reg pair
    ld destLO, srcLO
    ld destHI, srcHI
.endm

; works with HL, IX+d, IY+d
.macro readWord, ptr, regHI, regLO
    ld regLO, (ptr)
    inc ptr
    ld regHI, (ptr)
    inc ptr
.endm

; works with HL, IX+d, IY+d
.macro writeWord, ptr, regHI, regLO
    writeByte ptr, regLO
    writeByte ptr, regHI
.endm

; works with HL, IX+d, IY+d
.macro writeByte, ptr, reg
    ld (ptr), reg
    inc ptr
.endm

; result: sets Z if zero
; destroys: A
.macro checkZeroWord, regHI, regLO          ; check if reg pair is zero
    ld A, regLO
    or regHI
.endm

.macro CMP16, val
    ld DE, val
    or A
    sbc HL, DE
    checkZeroWord H,L
.endm
