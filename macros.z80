;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; macros
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; _alter order of two cells
; destroys A
.macro _alter2, ofs, reg                ; x1 x2 -- x2 x1
    ld A,(IX+ofs)
    ld (IX+ofs),reg
    ld reg,A
.endm

.macro _alter2x, ofs1, ofs2             ; x1 x2 -- x2 x1
    ld D,(IX+ofs1)
    ld E,(IX+ofs2)
    ld (IX+ofs1),E
    ld (IX+ofs2),D
.endm

; _alters order of three cells
; destroys A, DE
.macro _alter3, ofs1, reg, ofs3           ; x1 x2 x3 -- x2 x3 x1
    ld A,(IX+ofs1)
    ld D,reg
    ld E,(IX+ofs3)

    ld (IX+ofs1),D
    ld reg,E
    ld (IX+ofs3),A
.endm

.macro _alter3x, ofs1, ofs2, ofs3        ; x1 x2 x3 -- x2 x3 x1
    ld A,(IX+ofs1)
    ld D,(IX+ofs2)
    ld E,(IX+ofs3)

    ld (IX+ofs1),D
    ld (IX+ofs2),E
    ld (IX+ofs3),A
.endm

.macro loadWord, destHI, destLO, srcHI, srcLO    ; transfer from src reg pair to dest reg pair
    ld destLO, srcLO
    ld destHI, srcHI
.endm

; works with HL, IX+d, IY+d
.macro readWord, ptr, regHI, regLO
    readByte ptr, regLO
    readByte ptr, regHI
.endm

; works with HL, IX+d, IY+d
.macro writeWord, ptr, regHI, regLO
    writeByte ptr, regLO
    writeByte ptr, regHI
.endm

; works with HL, IX+d, IY+d
.macro readByte, ptr, reg
    ld reg, (ptr)
    inc ptr
.endm

; works with HL, IX+d, IY+d
.macro writeByte, ptr, reg
    ld (ptr), reg
    inc ptr
.endm

; result: sets Z if zero
; destroys: A
.macro checkZeroWord, regHI, regLO          ; check if reg pair is zero
    ld A, regLO
    or regHI
.endm

.macro CMP16, val
    ld DE, val
    or A
    sbc HL, DE
    checkZeroWord H,L
.endm
