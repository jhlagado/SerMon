;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; macros
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Macros to deal with the return stack.
.macro PUSH_RET, regHI, regLO
    push regHIregLO
.endm

.macro POP_RET, regHI, regLO
    pop regHIregLO
.endm

.macro SET_RET_SP
    loadWord H,L, B,C
    LD SP, HL
.endm

.macro loadWord, destHI, destLO, srcHI, srcLO    ; transfer from src reg pair to dest reg pair
    ld destLO, srcLO
    ld destHI, srcHI
.endm

; works with HL, IX+d, IY+d
.macro readWord, ptr, regHI, regLO
    ld regLO, (ptr)
    inc ptr
    ld regHI, (ptr)
    inc ptr
.endm

; works with HL, IX+d, IY+d
.macro writeWord, ptr, regHI, regLO
    writeByte ptr, regLO
    writeByte ptr, regHI
.endm

; works with HL, IX+d, IY+d
.macro writeByte, ptr, reg
    ld (ptr), reg
    inc ptr
.endm

; result: sets Z if zero
; destroys: A
.macro checkZeroWord, regHI, regLO          ; check if reg pair is zero
    ld A, regLO
    or regHI
.endm

.macro CMP16, val
    ld DE, val
    or A
    sbc HL, DE
    checkZeroWord H,L
.endm
