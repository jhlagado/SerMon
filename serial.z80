SER_EMPTYSIZE   equ 5
SER_FULLSIZE    equ 30H

IO_CTRL         equ $80
IO_DATA         equ $81
RTS_HIGH        equ $D6                ; 11010110
RTS_LOW         equ $96                ; 10010110

PORT_STATUS     equ $04
PORT_DATA       equ $03

initSerial:

    ld HL,0
    ld (serbufused),HL

    ld HL,serbuf
    ld (serinptr),HL
    ld (serrdptr),HL

    .if SERIALMODE = 6850
        ld A,RTS_LOW
        out (IO_CTRL),A
    .endif

    im 1
    ei
    ret

serialIn:
    push AF
    push HL
    .if SERIALMODE = 6850
        in A,(IO_CTRL)
        and $01
        _if nz
            in A,(IO_DATA)
            call serialIn2
        _endif
    .else
        _do
            in A,(PORT_STATUS)
            bit 1,A
        _until z
        _enddo
        in A,(PORT_DATA)
        call serialIn2
    .endif
    pop HL
    pop AF
    ei
    ret

serialIn2:
    push AF
    ld A,(serBufUsed)
    cp SER_BUFSIZE
    _if z
        pop AF
        ret
    _endif
    ld HL,(serInPtr)
    inc HL
    ld A,L             ; Only need to check low byte becasuse lineBuf<256 bytes
    cp (serBuf + SER_BUFSIZE) & $FF
    _if z
        ld HL,serBuf
    _endif
    ld (serInPtr),HL
    pop AF
    ld (HL),A
    ld A,(serBufUsed)
    inc A
    ld (serBufUsed),A
    .if SERIALMODE = 6850
        cp SER_FULLSIZE
        _if nc
            ld A,RTS_HIGH
            out (IO_CTRL),A
        _endif
    .endif
    ret

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; putc - output a character
; params: A = char to output
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

putc:
    .if SERIALMODE = 6850
        push AF                     ; Store character
        _do
            in A,(IO_CTRL)      ; Status byte
            bit 1,A             ; Set Zero flag if still transmitting character
        _until nz
        _enddo
        pop AF                  ; Retrieve character
        out (IO_DATA),A         ; Output the character
    .else
        push AF                     ; Store character
        _do
            in A,(PORT_STATUS)  ; Status byte
            bit 0,A             ; Set Zero flag if still transmitting character
        _until nz
        _enddo
        pop AF                  ; Retrieve character
    .endif
    ret

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; serReady - check if there is input waiting to be read
; flags: NZ if input ready
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

serReady:
    ld A,(serBufUsed)
    cp $0
    ret


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; getc - input
; returns: A = input char
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

getc:
    push HL

    .if TESTMODE

        ld HL, (char_pointer)
        ld A, (HL)
        inc HL
        ld (char_pointer), HL

    .else
        _do
            call serReady
        _until nz
        _enddo
        ld HL,(serRdPtr)
        inc HL
        ld A,L             ; Only need to check low byte because lineBuf<256 bytes
        cp (serBuf + SER_BUFSIZE) & $FF
        _if z
            ld HL,serBuf
        _endif
        di
        ld (serRdPtr),HL
        ld A,(serBufUsed)
        dec A
        ld (serBufUsed),A

        .if SERIALMODE = 6850
            cp SER_EMPTYSIZE
            _if c
                ld A,RTS_LOW
                out (IO_CTRL),A
            _endif
        .endif

        ld A,(HL)
        ei
    .endif

    pop HL
    ret
