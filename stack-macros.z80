;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; param stack
;;
;; the top of the stack (TOS) is stored in register BC for efficiency
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; drop the top of param stack
.macro _drop                       ; x --
    _pop0 B,C		        ; drop top of stack
.endm

; duplicate the top of param stack
.macro _dup                        ; x -- x x
    _push0 B,C
.endm

; swap the top two items of param stack
; destroys AF'
.macro _swap                       ; x1 x2 -- x2 x1
    ex AF,AF'
    ld A,(IX-2)
    ld (IX-2),C
    ld C,A
    ld A,(IX-1)
    ld (IX-1),B
    ld B,A
    ex AF,AF'
.endm

; reverse rot top three items, top of param stack becomes third from top  stack
; destroys AF'
.macro _nrot                       ; x1 x2 x3 -- x3 x1 x2
    ex AF,AF'
    ld A,(IX-4)
    ld (IX-4),C 
    ld C,(IX-2)
    ld (IX-2),A 
    ld A,(IX-3)
    ld (IX-3),B 
    ld B,(IX-1)
    ld (IX-1),A 
    ex AF,AF'
.endm

; duplicate second from top of param stack

.macro _over                       ;x1 x2 -- x1 x2 x1
    _dup
    ld C,(IX-4)
    ld B,(IX-3)
.endm

; rot top three items, third from top ends up on top of param stack
; destroys AF'
.macro _rot                 ; x1 x2 x3 -- x2 x3 x1
    ex AF,AF'
    ld A,(IX-2)
    ld (IX-2),C 
    ld C,(IX-4)
    ld (IX-4),A 
    ld A,(IX-1)
    ld (IX-1),B 
    ld B,(IX-3)
    ld (IX-3),A 
    ex AF,AF'
.endm

; Macros to deal with the param stack.
.macro _push0, regHI, regLO
    ld (IX+0), regLO        ; PUSH register pair
    inc IX
    ld (IX+0), regHI
    inc IX
.endm

.macro _pop0, regHI, regLO
    dec IX                  ; POP register pair
    ld regHI, (IX+0)
    dec IX
    ld regLO, (IX+0)
.endm

; Macros to deal with the param stack with TOS in BC
.macro _push, regHI, regLO
    _dup                    ; push TOS reg pair
    ld B, regHI             ; move register pair into TOS reg pair
    ld C, regLO
.endm

.macro _peek, regHI, regLO
    ld regHI, B             ; move TOS reg pair into register pair
    ld regLO, C
.endm

.macro _pop, regHI, regLO
    _peek regHI,regLO
    _pop0 B,C
.endm

.macro _pushValue, val
    _dup
    ld BC, val
.endm

.macro _pushText, s1, len
    _pushValue tpt_text%%M
    _pushValue len
    _skip
tpt_text%%M:
        db s1
    _endskip
.endm

.macro _pushPText, s1
    _pushValue tpt_text%%M
    ld BC, tpt_text%%M
    _skip
tpt_text%%M:
        .pstr s1
    _endskip
.endm

